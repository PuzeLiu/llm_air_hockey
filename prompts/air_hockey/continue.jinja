You need to choose a strategy to update the offset angle to minimize the distance to the goal.

You have the following action options:
- LEFT: Add the step size to the current offset.
- RIGHT: Subtract the step size to the current offset.
- HALF_LEFT: Reduce the step size by 0.01 and add the new step size to the current offset.
- HALF_RIGHT: Reduce the step size by 0.01 and subtract the new step size from the current offset.
- DOUBLE_LEFT: Increase the step size by 0.01 and add the new step size to the current offset.
- DOUBLE_RIGHT: Increase the step size by 0.01 and subtract the new step size from the current offset.
- NONE: Use the current offset and don't change.

You should choose one option using the following signature: 

```python
class Action: 
    value = <Option>
```

An example of what is expected from you to implement is as follows: 
```python
class Action: 
    value = "LESS_LEFT"
```

The following is a history of previous experiments and their results:

The following angle_offset 0.000 resulted in a final distance to goal of 0.1950.

The following angle_offset 0.100 resulted in a final distance to goal of 0.05038.

The following angle_offset -0.100 resulted in a final distance to goal of 0.3487.

{{expr_results}}

The current angle_offset is {{current_offset}} and the step_size is {{step_size}}.

Think about the results above and the current value when choosing the next action option.

Let's think step by step.

Please also keep in mind the following:
* The offset value should be between -np.pi/2 and np.pi/2, values outside this range should be avoided.
* Do not use or create variables that do not exist.
* Only provide the value class variable for the Action class, as above in the signature.
* The goal position is {{goal_pos}}.
* The Action should be chosen such that the distance to goal is as small as possible.
* Do not explain your reasoning.
* You should make the decision directly.